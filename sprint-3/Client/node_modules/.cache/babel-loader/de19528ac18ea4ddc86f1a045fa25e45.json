{"ast":null,"code":"var _jsxFileName = \"/home/jessica/Desktop/BRAINSTATION/brainFlix-JessicaShin/brainFlix-JessicaShin/sprint-3/Client/src/components/Comments/Comment.js\";\nimport React from 'react';\nimport './Comments.scss'; // TImestamp\n\nexport function updateTime(unix) {\n  const getDate = new Date(unix);\n  const year = getDate.getFullYear();\n  const month = getDate.getMonth();\n  const day = getDate.getDate();\n  let calSeconds = Math.floor((new Date() - getDate) / 1000);\n  let timeAgo = Math.floor(calSeconds / 2592000);\n\n  if (timeAgo > 1) {\n    return month + 1 + '/' + day + '/' + year;\n  }\n\n  timeAgo = Math.floor(calSeconds / 86400);\n\n  if (timeAgo > 1) {\n    return timeAgo + \" days ago\";\n  }\n\n  timeAgo = Math.floor(calSeconds / 3600);\n\n  if (timeAgo > 1) {\n    return timeAgo + \" hours ago\";\n  }\n\n  timeAgo = Math.floor(calSeconds / 60);\n\n  if (timeAgo > 1) {\n    return timeAgo + \" minutes ago\";\n  }\n\n  return Math.floor(calSeconds) + \" seconds ago\";\n}\n; // VIDEO COMMENTS\n\nconst CommentComponent = props => {\n  let {\n    name,\n    timestamp,\n    comment,\n    likesHandle,\n    deleteHandle\n  } = props;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment--inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment--left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment--right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment__date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, updateTime(timestamp))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, comment)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__button-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"comment__button btn btn--white\",\n    onClick: likesHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"comment__button btn btn--white\",\n    onClick: deleteHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"Delete\"))))));\n};\n\nconst Comment = props => {\n  let {\n    displayComment\n  } = props; // Could not figure out how to put each commentId in .post/.delete :(\n\n  const likesHandle = event => {\n    // event.preventDefault();\n    console.log('like'); // let sideUrl = this.props.match.params.id;\n    // if (typeof sideUrl === \"undefined\") {\n    //     sideUrl = '1af0jruup5gu'\n    // }\n    // axios\n    //     .post(`${api}/${sideUrl}/comments/${this.props.match.params.comments}`)\n    //     .then(\n    //         this.setState({\n    //             clickCounter: ++this.state.clickCounter\n    //         })\n    //     )        \n  };\n\n  const deleteHandle = event => {\n    // event.preventDefault();\n    console.log('delete'); // let sideUrl = this.props.match.params.id;\n    // if (typeof sideUrl === \"undefined\") {\n    //     sideUrl = '1af0jruup5gu'\n    // }\n    // axios\n    //     .delete(`${api}/${sideUrl}/comments/:comments_id`)\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, displayComment.comments.map(content => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: content.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CommentComponent, {\n      name: content.name,\n      timestamp: content.timestamp,\n      comment: content.comment,\n      likesHandle: likesHandle,\n      deleteHandle: deleteHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }));\n  }).reverse());\n};\n\nexport default Comment;","map":{"version":3,"sources":["/home/jessica/Desktop/BRAINSTATION/brainFlix-JessicaShin/brainFlix-JessicaShin/sprint-3/Client/src/components/Comments/Comment.js"],"names":["React","updateTime","unix","getDate","Date","year","getFullYear","month","getMonth","day","calSeconds","Math","floor","timeAgo","CommentComponent","props","name","timestamp","comment","likesHandle","deleteHandle","Comment","displayComment","event","console","log","comments","map","content","id","reverse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Comments.scss';\n\n\n// TImestamp\n\nexport function updateTime (unix) {\n    const getDate = new Date(unix);\n\n    const year = getDate.getFullYear();\n    const month = getDate.getMonth();\n    const day = getDate.getDate();\n\n\n    let calSeconds = Math.floor((new Date() - getDate) / 1000);\n    let timeAgo = Math.floor(calSeconds / 2592000);\n    if (timeAgo > 1) {\n    return (month+1) + '/' + day + '/' + year;\n    }\n    timeAgo = Math.floor(calSeconds / 86400);\n    if (timeAgo > 1) {\n      return timeAgo + \" days ago\";\n    }\n    timeAgo = Math.floor(calSeconds / 3600);\n    if (timeAgo > 1) {\n      return timeAgo + \" hours ago\";\n    }\n    timeAgo = Math.floor(calSeconds / 60);\n    if (timeAgo > 1) {\n      return timeAgo + \" minutes ago\";\n    }\n    return Math.floor(calSeconds) + \" seconds ago\";\n\n};\n\n\n// VIDEO COMMENTS\n\nconst CommentComponent = (props) => {\n\n    let {name, timestamp, comment, likesHandle, deleteHandle} = props;\n\n    return (\n\n        <section className=\"comment\">\n            <div className=\"comment--inner\">\n                <div className=\"comment__box\">\n    \n                    <div className=\"comment--left\">\n    \n                    </div>\n    \n                    <div className=\"comment--right\">\n    \n                        <div className=\"comment__info\">\n                            <p className=\"comment__name\">{name}</p>\n                            <p className=\"comment__date\">{updateTime(timestamp)}</p>\n                        </div>\n    \n                        <div>\n                            <p className=\"comment__comments\">{comment}</p>\n                        </div>\n\n                        <div className=\"comment__button-box\">\n                            <button className=\"comment__button btn btn--white\" onClick={likesHandle}>0</button>\n                            <button className=\"comment__button btn btn--white\" onClick={deleteHandle}>Delete</button>\n                        </div>\n    \n                    </div>\n    \n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst Comment = (props) => {\n\n    let {displayComment} = props;\n // Could not figure out how to put each commentId in .post/.delete :(\n\n    const likesHandle = (event) => {\n        // event.preventDefault();\n        console.log('like')\n\n        // let sideUrl = this.props.match.params.id;\n\n        // if (typeof sideUrl === \"undefined\") {\n        //     sideUrl = '1af0jruup5gu'\n        // }\n        // axios\n        //     .post(`${api}/${sideUrl}/comments/${this.props.match.params.comments}`)\n        //     .then(\n        //         this.setState({\n        //             clickCounter: ++this.state.clickCounter\n        //         })\n        //     )        \n    }\n\n    const deleteHandle = (event) => {\n        // event.preventDefault();\n        console.log('delete')\n\n        // let sideUrl = this.props.match.params.id;\n\n        // if (typeof sideUrl === \"undefined\") {\n        //     sideUrl = '1af0jruup5gu'\n        // }\n        \n        // axios\n        //     .delete(`${api}/${sideUrl}/comments/:comments_id`)\n    }\n    return (\n        <div>\n\n            {displayComment.comments.map((content) => {\n                return (\n                    <React.Fragment key={content.id}>\n                        <CommentComponent                        \n                        name={content.name}\n                        timestamp={content.timestamp}\n                        comment={content.comment}\n                        likesHandle={likesHandle}\n                        deleteHandle={deleteHandle}\n                        />\n                        \n                    </React.Fragment>\n                )\n            }).reverse()}\n            {/* I could not figure out how to sort the comments by date */}\n        </div>  \n    )\n\n}\n\nexport default Comment;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}