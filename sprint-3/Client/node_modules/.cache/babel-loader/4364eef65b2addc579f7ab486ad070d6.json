{"ast":null,"code":"var _jsxFileName = \"/home/jessica/Desktop/BRAINSTATION/brainFlix-JessicaShin/brainFlix-JessicaShin/sprint-3/Client/src/pages/Main/Main.js\";\nimport React from 'react';\nimport './Main.scss';\nimport axios from 'axios'; // import each components\n\nimport VideoPlaying from '../../components/VideoPlaying/VideoPlaying';\nimport Description from '../../components/Description/Description';\nimport Form from '../../components/Form/Form';\nimport Comment from '../../components/Comments/Comment';\nimport VideoSide from '../../components/VideoSide/VideoSide'; // MAIN VIDEO SECTION\n\nconst api = 'http://localhost:8080/video';\nconst mainURL = '1af0jruup5gu';\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoData: [],\n      selectedVideo: {\n        comments: []\n      } // clickCounter: 0\n\n    };\n\n    this.submitHandle = event => {\n      event.preventDefault();\n      console.log(this.props.match);\n      let dynamicVideo = this.props.match.params.id;\n\n      if (typeof dynamicVideo === \"undefined\") {\n        dynamicVideo = '1af0jruup5gu';\n      }\n\n      if (!event.target.comment.value) {\n        alert('Please type comment');\n      } else {\n        axios.post(`${api}/${dynamicVideo}/comments`, {\n          \"comment\": event.target.comment.value,\n          \"timestamp\": Date.now(),\n          \"name\": \"USER_NAME\"\n        }).then(res => {\n          console.log(res);\n          this.mountFx();\n        });\n        event.target.reset();\n      }\n    };\n  }\n\n  // function for re-using axios\n  getfromAPI(urlId) {\n    axios.get(api + '/' + urlId).then(response => {\n      this.setState({\n        selectedVideo: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  mountFx() {\n    this.getfromAPI(mainURL);\n    axios.get(api).then(response => {\n      this.setState({\n        videoData: response.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mountFx();\n  }\n\n  componentDidUpdate(prevProps) {\n    const matchUrl = this.props.match.url;\n    const prevUrl = prevProps.match.url;\n\n    if (matchUrl !== prevUrl && matchUrl === '/') {\n      this.getfromAPI(mainURL);\n    } else if (matchUrl !== prevUrl) {\n      this.getfromAPI(`${this.props.match.params.id}`);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VideoPlaying, Object.assign({}, this.state.selectedVideo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main--flexbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main--left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Description, Object.assign({}, this.state.selectedVideo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      comments: this.state.selectedVideo,\n      submitHandle: this.submitHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Comment, {\n      displayComment: this.state.selectedVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main--right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoSide, {\n      videoList: this.state.videoData.filter(content => content.id !== this.state.selectedVideo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\n;\nexport default Main;","map":{"version":3,"sources":["/home/jessica/Desktop/BRAINSTATION/brainFlix-JessicaShin/brainFlix-JessicaShin/sprint-3/Client/src/pages/Main/Main.js"],"names":["React","axios","VideoPlaying","Description","Form","Comment","VideoSide","api","mainURL","Main","Component","state","videoData","selectedVideo","comments","submitHandle","event","preventDefault","console","log","props","match","dynamicVideo","params","id","target","comment","value","alert","post","Date","now","then","res","mountFx","reset","getfromAPI","urlId","get","response","setState","data","catch","error","componentDidMount","componentDidUpdate","prevProps","matchUrl","url","prevUrl","render","filter","content"],"mappings":"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","sourcesContent":["import React from 'react';\nimport'./Main.scss';\nimport axios from 'axios';\n\n// import each components\n\nimport VideoPlaying from '../../components/VideoPlaying/VideoPlaying'\nimport Description from '../../components/Description/Description';\nimport Form from '../../components/Form/Form';\nimport Comment from '../../components/Comments/Comment';\nimport VideoSide from '../../components/VideoSide/VideoSide';\n\n\n// MAIN VIDEO SECTION\n\nconst api = 'http://localhost:8080/video';\nconst mainURL = '1af0jruup5gu';\n\n\nclass Main extends React.Component {\n    \n    state ={\n        videoData: [],\n        selectedVideo: {\n            comments: []\n        }\n        // clickCounter: 0\n    }\n\n    // function for re-using axios\n    getfromAPI ( urlId ) {\n        axios\n            .get(api + '/' + urlId)\n            .then(response => {\n                this.setState({\n                    selectedVideo: response.data\n                })\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    mountFx () {\n       this.getfromAPI(mainURL)\n        axios\n            .get(api)\n            .then(response => {\n                this.setState({\n                    videoData: response.data\n                })\n            })\n    }\n\n    componentDidMount() {\n        this.mountFx();\n    }\n\n    componentDidUpdate(prevProps) {\n        const matchUrl = this.props.match.url;\n        const prevUrl = prevProps.match.url;\n        if (matchUrl !== prevUrl && matchUrl === '/') {\n\n            this.getfromAPI(mainURL)\n\n        } else if (matchUrl !== prevUrl) {\n            \n            this.getfromAPI(`${this.props.match.params.id}`)\n            \n        }\n    }\n\n    submitHandle = (event) => {\n        event.preventDefault();\n\n        console.log(this.props.match)\n        let dynamicVideo = this.props.match.params.id;\n\n        if (typeof dynamicVideo === \"undefined\") {\n            dynamicVideo = '1af0jruup5gu'\n        } \n\n        if (!event.target.comment.value) {\n\n            alert ('Please type comment');\n        \n        } else {\n            axios\n                .post(`${api}/${dynamicVideo}/comments`, {\n                    \"comment\" : event.target.comment.value,\n                    \"timestamp\" : Date.now(),\n                    \"name\" : \"USER_NAME\"\n                })\n                .then((res) => {\n                    console.log(res)\n                    this.mountFx()            \n                })\n                event.target.reset();                \n        }\n    }\n\n    render () {\n\n        return (\n                \n            <main className=\"main\">\n\n                <VideoPlaying \n                    {...this.state.selectedVideo}\n                />\n\n                <div className=\"main--flexbox\">\n                    \n                    <div className=\"main--left\">\n                        <Description \n                            {...this.state.selectedVideo}\n                        />\n        \n                        <Form \n                            comments={this.state.selectedVideo}\n                            submitHandle={this.submitHandle}\n                        />\n\n                        <Comment \n                            displayComment={this.state.selectedVideo}\n                        />\n        \n                    </div>\n    \n                    <div className=\"main--right\">\n                        <VideoSide \n                            videoList={this.state.videoData.filter(content => content.id !== this.state.selectedVideo.id)}\n                        /> \n                    </div>\n                </div>\n\n            </main>\n        )\n    };\n};\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}